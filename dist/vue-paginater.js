!function(I){var g={};function C(A){if(g[A])return g[A].exports;var n=g[A]={i:A,l:!1,exports:{}};return I[A].call(n.exports,n,n.exports,C),n.l=!0,n.exports}C.m=I,C.c=g,C.d=function(I,g,A){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:A})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var A=Object.create(null);if(C.r(A),Object.defineProperty(A,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var n in I)C.d(A,n,function(g){return I[g]}.bind(null,n));return A},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=2)}([function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvVnVlUGFnaW5hdGVyLnZ1ZT9hODYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_VuePaginater_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_VuePaginater_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_VuePaginater_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* unused harmony reexport * */\n /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_VuePaginater_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvVnVlUGFnaW5hdGVyLnZ1ZT9iMzk3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUF5UixDQUFnQix1V0FBRyxFQUFDIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9WdWVQYWdpbmF0ZXIudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1Z1ZVBhZ2luYXRlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPWNzcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/VuePaginater.vue?vue&type=template&id=4b0cd1ee&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    { staticClass: "btn-group", attrs: { disabled: _vm.disabled } },\n    [\n      _vm.enableFirstPage\n        ? _c(\n            "button",\n            {\n              staticClass: "btn btn-default mb-2",\n              attrs: { type: "button", disabled: _vm.isInFirstPage },\n              on: { click: _vm.onClickFirstPage }\n            },\n            [_vm._v("\\n        " + _vm._s(_vm.firstLabel) + "\\n    ")]\n          )\n        : _vm._e(),\n      _vm._v(" "),\n      _c(\n        "button",\n        {\n          staticClass: "btn btn-default mb-2",\n          attrs: { type: "button", disabled: _vm.isInFirstPage },\n          on: { click: _vm.onClickPreviousPage }\n        },\n        [_vm._v("\\n        " + _vm._s(_vm.previousLabel) + "\\n    ")]\n      ),\n      _vm._v(" "),\n      _vm._l(_vm.pages, function(page) {\n        return _vm.enablePageListing\n          ? [\n              _c(\n                "button",\n                {\n                  key: page.name,\n                  staticClass: "btn btn-default mb-2",\n                  class: { active: _vm.isPageActive(page.name) },\n                  attrs: { type: "button", disabled: page.isDisabled },\n                  on: {\n                    click: function($event) {\n                      return _vm.onClickPage(page.name)\n                    }\n                  }\n                },\n                [_vm._v("\\n            " + _vm._s(page.name) + "\\n        ")]\n              )\n            ]\n          : _vm._e()\n      }),\n      _vm._v(" "),\n      _c(\n        "button",\n        {\n          staticClass: "btn btn-default mb-2",\n          attrs: { type: "button", disabled: _vm.isInLastPage },\n          on: { click: _vm.onClickNextPage }\n        },\n        [_vm._v("\\n        " + _vm._s(_vm.nextLabel) + "\\n    ")]\n      ),\n      _vm._v(" "),\n      _vm.enableLastPage\n        ? _c(\n            "button",\n            {\n              staticClass: "btn btn-default mb-2",\n              attrs: { type: "button", disabled: _vm.isInLastPage },\n              on: { click: _vm.onClickLastPage }\n            },\n            [_vm._v("\\n        " + _vm._s(_vm.lastLabel) + "\\n    ")]\n          )\n        : _vm._e()\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./src/VuePaginater.vue?vue&type=template&id=4b0cd1ee&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/VuePaginater.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var VuePaginatervue_type_script_lang_js_ = ({\n\n    name: \'VuePaginater\',\n    data: function () {\n        return {\n            currentPage: 1\n            //offset:0\n        };\n    },\n    props: {\n        maxVisibleButtons: {\n            type: Number,\n            required: false,\n            default: 3\n        },\n\n        max: {\n            type: Number,\n            required: false,\n            default: 0\n        },\n        total: {\n            type: Number,\n            required: true\n        },\n\n        enablePageListing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        enableFirstPage: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        enableLastPage: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        firstLabel: {\n            type: String,\n            required: false,\n            default: \'First\'\n        },\n        lastLabel: {\n            type: String,\n            required: false,\n            default: \'Last\'\n        },\n        nextLabel: {\n            type: String,\n            required: false,\n            default: \'Next\'\n        },\n        previousLabel: {\n            type: String,\n            required: false,\n            default: \'Previous\'\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n\n    },\n    computed: {\n        startPage() {\n            if (this.currentPage == 1) {\n                return 1;\n            }\n\n            if (this.currentPage == this.totalPages) {\n                return this.amountOfPages - this.maxVisibleButtons;\n            }\n\n            return this.currentPage - 1;\n        },\n        amountOfPages() {\n            return Math.round(this.total / this.max);\n        },\n        pages() {\n            const range = [];\n            for (let i = this.startPage; i <= Math.min(this.startPage + this.maxVisibleButtons - 1, this.amountOfPages); i += 1) {\n                if (i > 0) {\n                    range.push({\n                        name: i,\n                        isDisabled: i == this.currentPage\n                    });\n                }\n            }\n            return range;\n        },\n        isInFirstPage() {\n            return this.currentPage == 1;\n        },\n        isInLastPage() {\n            return this.currentPage == this.amountOfPages;\n        }\n    },\n    methods: {\n        pageChanged: function (page) {\n            this.currentPage = page;\n            // this.offset=(page*this.max)-this.max\n            //this.$emit(\'offset\',this.offset);\n            this.$emit(\'offset\', page * this.max - this.max);\n        },\n        onClickFirstPage() {\n            this.$emit(\'pagechanged\', 1);\n            this.pageChanged(1);\n        },\n        onClickPreviousPage() {\n            this.currentPage = this.currentPage - 1;\n            this.$emit(\'pagechanged\', this.currentPage);\n            this.pageChanged(this.currentPage);\n        },\n        onClickPage(page) {\n            this.$emit(\'pagechanged\', page);\n            this.pageChanged(page);\n        },\n        onClickNextPage() {\n            this.currentPage = this.currentPage + 1;\n            this.$emit(\'pagechanged\', this.currentPage);\n            this.pageChanged(this.currentPage);\n        },\n        onClickLastPage() {\n            this.$emit(\'pagechanged\', this.amountOfPages);\n            this.pageChanged(this.amountOfPages);\n        },\n        isPageActive(page) {\n            return this.currentPage == page;\n        }\n    }\n});\n// CONCATENATED MODULE: ./src/VuePaginater.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_VuePaginatervue_type_script_lang_js_ = (VuePaginatervue_type_script_lang_js_); \n// EXTERNAL MODULE: ./src/VuePaginater.vue?vue&type=style&index=0&lang=css&\nvar VuePaginatervue_type_style_index_0_lang_css_ = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === \'function\'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = \'data-v-\' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== \'undefined\') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn\'t\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n// CONCATENATED MODULE: ./src/VuePaginater.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar component = normalizeComponent(\n  src_VuePaginatervue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "src/VuePaginater.vue"\n/* harmony default export */ var VuePaginater = (component.exports);\n// CONCATENATED MODULE: ./src/main.js\n\nwindow.VuePaginater = VuePaginater;\n\n/* harmony default export */ var main = __webpack_exports__["default"] = (VuePaginater);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')}]);